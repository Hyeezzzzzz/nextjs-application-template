{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/useAuth.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useCallback } from 'react'\n\ninterface AuthContextType {\n  isAuthenticated: boolean\n  user: any | null\n  login: (username: string, userType: string) => Promise<void>\n  logout: () => void\n  error: string | null\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState<any | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  const login = useCallback(async (username: string, userType: string) => {\n    try {\n      // In a real application, this would make an API call\n      // For demo purposes, we'll simulate a successful login\n      if (!username.trim()) {\n        throw new Error('Usuário é obrigatório')\n      }\n\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000))\n\n      setUser({\n        username,\n        userType,\n        name: 'Usuário Demo',\n        accountNumber: '1234-5'\n      })\n      setIsAuthenticated(true)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao fazer login')\n      throw err\n    }\n  }, [])\n\n  const logout = useCallback(() => {\n    setUser(null)\n    setIsAuthenticated(false)\n    setError(null)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      error\n    }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAgBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAqB;;IAC1D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2CAAE,OAAO,UAAkB;YACjD,IAAI;gBACF,qDAAqD;gBACrD,uDAAuD;gBACvD,IAAI,CAAC,SAAS,IAAI,IAAI;oBACpB,MAAM,IAAI,MAAM;gBAClB;gBAEA,0BAA0B;gBAC1B,MAAM,IAAI;uDAAQ,CAAA,UAAW,WAAW,SAAS;;gBAEjD,QAAQ;oBACN;oBACA;oBACA,MAAM;oBACN,eAAe;gBACjB;gBACA,mBAAmB;gBACnB,SAAS;YACX,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,MAAM;YACR;QACF;0CAAG,EAAE;IAEL,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4CAAE;YACzB,QAAQ;YACR,mBAAmB;YACnB,SAAS;QACX;2CAAG,EAAE;IAEL,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAC3B;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;GA/CgB;KAAA;AAiDT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}